.type Node <: symbol
.type NodeList  <: symbol
.type Bw <: number

.decl Link(x: Node, y: Node, bw: Bw)
.input Link

.decl Path(x: Node, y: Node, path: NodeList, bw: Bw)
Path(x,y,p,c) :- Link(x,y,c), p=cat(x,y).
Path(x,y,p,c) :- Link(x,z,c1), Path(z,y,p1,c2) , p=cat(x,p1), c=min(c1,c2).

// .output Path

.decl maxBw(x: Node, y: Node, bw: Bw)
maxBw(x,y,mb) :- Path(x,y,_,_),  mb = max c : Path(x,y,_,c).

.decl bestPath(x: Node, y:Node, path: NodeList, bw: Bw)
bestPath(x,y,p,mc) :- Path(x,y,p,mc), maxBw(x,y,mc).

// .output minCost
.output bestPath

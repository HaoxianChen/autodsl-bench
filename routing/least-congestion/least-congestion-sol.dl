.type Node <: symbol
.type NodeList  <: symbol
.type Bw <: number
.type InstanceId <: number

.decl Link(x: Node, y: Node, bw: Bw, i:InstanceId)
.input Link

.decl Path(x: Node, y: Node, path: NodeList, bw: Bw, i:InstanceId)
Path(x,y,p,c,i) :- Link(x,y,c,i), p=cat(x,y).
Path(x,y,p,c,i) :- Link(x,z,c1,i), Path(z,y,p1,c2,i) , 
                p=cat(x,p1), !contains(as(x,symbol),as(p1,symbol)), 
                c=min(c1,c2).

// .output Path

.decl maxBw(x: Node, y: Node, bw: Bw, i:InstanceId)
maxBw(x,y,mb,i) :- Path(x,y,_,_,i),  mb = max c : Path(x,y,_,c,i).

.decl bestPath(x: Node, y:Node, path: NodeList, bw: Bw, i:InstanceId)
bestPath(x,y,p,mc,i) :- Path(x,y,p,mc,i), maxBw(x,y,mc,i).

// .output minCost
.output bestPath
